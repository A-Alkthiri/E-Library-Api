## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Ad Management'
description: |-

  APIs for managing ads in the e-library.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/ads
    metadata:
      groupName: 'Ad Management'
      groupDescription: |-

        APIs for managing ads in the e-library.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all ads.'
      description: 'Retrieve a list of all ads.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "code": 200,
           "data": [
             {
               "id": 1,
               "title": "Ad Title",
               "image_url": "https://example.com/image.jpg",
               "content": " "
             }
           ],
           "message": "Ads retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/ads/{id}'
    metadata:
      groupName: 'Ad Management'
      groupDescription: |-

        APIs for managing ads in the e-library.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a single ad.'
      description: 'Retrieve a specific ad by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ad.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "code": 200,
           "data": {
             "id": 1,
             "title": "Ad Title",
             "image_url": "https://example.com/image.jpg",
             "content": " "
           },
           "message": "Ad retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "code": 404,
           "message": "Ad not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/ads
    metadata:
      groupName: 'Ad Management'
      groupDescription: |-

        APIs for managing ads in the e-library.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new ad.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the ad.'
        required: true
        example: '"Summer Sale"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image_url:
        name: image_url
        description: 'The URL of the ad image.'
        required: true
        example: '"https://example.com/image.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      content:
        name: content
        description: 'optinal required The URL of the ad image.'
        required: false
        example: '"https://example.com/image.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: '"Summer Sale"'
      image_url: '"https://example.com/image.jpg"'
      content: '"https://example.com/image.jpg"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "code": 201,
           "data": {
             "id": 1,
             "title": "Summer Sale",
             "image_url": "https://example.com/image.jpg",
             "content": " "
           },
           "message": "Ad created successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "code": 422,
           "message": "The given data was invalid."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/ads/{id}'
    metadata:
      groupName: 'Ad Management'
      groupDescription: |-

        APIs for managing ads in the e-library.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ad.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
